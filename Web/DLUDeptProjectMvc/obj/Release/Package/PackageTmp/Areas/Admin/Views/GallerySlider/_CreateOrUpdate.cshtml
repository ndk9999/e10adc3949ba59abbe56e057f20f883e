<!--
    FileName: _CreateOrUpdate.cshtml
    Project Name: DLUProject
Date Created: 14/11/2014 11:05:17 AM
Description: Auto-generated
Version: 1.0.0.0
Author:	Lê Thanh Tuấn - Khoa CNTT
Author Email: tuanitpro@gmail.com
Author Mobile: 0976060432
Author URI: http://tuanitpro.com
License:

-->
@model DLUProject.Domain.GallerySlider


<div class="editor admin-editor">

    <div id="overlay-editor">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", htmlAttributes: new { @class = "alert alert-danger" })
        @Html.HiddenFor(model => model.GalleryID)
        @Html.HiddenFor(model => model.DateCreated)
        <div class="row clearfix">
            <div class="col-md-12">
                <div class="well">
                    <div class="form-horizontal clearfix">

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DisplayFlags, "DisplayFlags", htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.HiddenFor(model => model.DisplayFlags, htmlAttributes: new { @class = "spinner", placeholder = "DisplayFlags", data_rule_number = "true" })
                            @Html.ValidationMessageFor(model => model.DisplayFlags)
                            <br />
                            @foreach (var item in Enum.GetValues(typeof(DLUProject.Domain.DisplayFlagSlider)))
                            {
                                var x = (DLUProject.Domain.DisplayFlagSlider)Enum.Parse(typeof(DLUProject.Domain.DisplayFlagSlider), item.ToString(), true);
                                <span class="inline">
                                    @if (Model.IsDisplayFlag(x))
                                    {

                                        @item.ToString()
                                        <input type="checkbox" class="checkbox-inline displayflags" value="@((int)item)" checked />
                                        <label>&nbsp;&nbsp;</label>
                                    }
                                    else
                                    {
                                        @item.ToString()
                                        <input type="checkbox" class="checkbox-inline displayflags" value="@((int)item)" />
                                        <label>&nbsp;&nbsp;</label>
                                    }
                                </span>
                            }
                        </div>
                    </div>
                     
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, "Name", htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control", placeholder = "Name", @required = "required", data_rule_required = "true", data_rule_minlength = "2" })
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, "Description", htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-4">
                            @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", placeholder = "Description" })
                            @Html.ValidationMessageFor(model => model.Description)
                        </div>
                    </div>
                    

                    <div class="form-group">
                        @Html.LabelFor(model => model.ImageUrl, "ImageUrl", htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-4">
                            <div class="input-group">
                                @Html.TextBoxFor(model => model.ImageUrl, htmlAttributes: new { @class = "form-control", placeholder = "Image",  @required = "required", data_rule_required = "true", data_rule_minlength = "2" })

                                <span class="input-group-btn">
                                    <a href="/Admin/FileManager?returnId=ImageUrl" class='btn btn-sm btn-inverse chooseImage'><i class="fa fa-link"></i> Chọn ảnh</a>
                                </span>
                                @Html.ValidationMessageFor(model => model.ImageUrl)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-2">
                            &nbsp;
                        </div>
                        <div class="col-sm-4">
                            <div class="imgthumb">
                                <img id="imgthumb" src="@Model.ImageUrl" class="img-responsive" />
                            </div>
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Url, "Url", htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.Url, htmlAttributes: new { @class = "form-control", placeholder = "Url" })
                            @Html.ValidationMessageFor(model => model.Url)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Attribute, "Attribute", htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.Attribute, htmlAttributes: new { @class = "form-control", placeholder = "Attribute" })
                            @Html.ValidationMessageFor(model => model.Attribute)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SortOrder, "SortOrder", htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.SortOrder, htmlAttributes: new { @class = "spinner", placeholder = "SortOrder", data_rule_number = "true" })
                            @Html.ValidationMessageFor(model => model.SortOrder)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsPublished, "IsPublished", htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-4">
                            @Html.CheckBoxFor(model => model.IsPublished)
                            @Html.ValidationMessageFor(model => model.IsPublished)
                        </div>
                    </div>



                </div>
            </div>

        </div>

    </div>
    <div class="form-actions">
        <button type="submit" class="btn btn-sm btn-primary"><i class="fa fa-save"></i> Lưu lại</button>
        &nbsp; &nbsp;
        <a href="@Url.Action("Index")" class="btn btn-sm" rel="tooltip" title="Quay lại">
            <i class="fa fa-undo"></i>
            Hủy
        </a>
    </div>
</div>


