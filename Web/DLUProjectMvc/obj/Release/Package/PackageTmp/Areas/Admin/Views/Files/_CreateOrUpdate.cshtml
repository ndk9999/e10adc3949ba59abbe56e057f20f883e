<!--
    FileName: _CreateOrUpdate.cshtml
    Project Name: DLUProject
Date Created: 21/11/2014 10:52:52 AM
Description: Auto-generated
Version: 1.0.0.0
Author:	Lê Thanh Tuấn - Khoa CNTT
Author Email: tuanitpro@gmail.com
Author Mobile: 0976060432
Author URI: http://tuanitpro.com
License:

-->
@model DLUProject.Domain.Files


<div class="editor admin-editor">

    <div id="overlay-editor">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", htmlAttributes: new { @class = "alert alert-danger" })
        @Html.HiddenFor(model => model.FileId)
        @Html.HiddenFor(model => model.CreatedByID)
        @Html.HiddenFor(model => model.DateCreated)
        @Html.HiddenFor(model => model.ModifiedByID)
        @Html.HiddenFor(model => model.DateModified)
        @Html.HiddenFor(model => model.FileName)
        <div class="row clearfix">
            <div class="col-md-12">
                <div class="well">
                    <div class="form-horizontal clearfix">

                        <div class="form-group">
                            @Html.LabelFor(model => model.FolderID, "FolderID", htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.DropDownListFor(model => model.FolderID, new SelectList(ViewBag.ListFolders, "FolderID", "FolderPath"), htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FolderID)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, "Name", htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control", placeholder = "Title" })
                                @Html.ValidationMessageFor(model => model.Name)
                            </div>
                        </div>
                         
                        <div class="form-group">
                            @Html.LabelFor(model => model.Extension, "Extension", htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.Extension, htmlAttributes: new { @class = "spinner", placeholder = "Extension", @required = "required", data_rule_required = "true", data_rule_minlength = "2" })
                                @Html.ValidationMessageFor(model => model.Extension)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Size, "Size", htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.Size, htmlAttributes: new { @class = "spinner", placeholder = "Size"})
                                @Html.ValidationMessageFor(model => model.Size)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Width, "Width", htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.Width, htmlAttributes: new { @class = "spinner", placeholder = "Width", data_rule_number = "true" })
                                @Html.ValidationMessageFor(model => model.Width)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Height, "Height", htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.Height, htmlAttributes: new { @class = "spinner", placeholder = "Height", data_rule_number = "true" })
                                @Html.ValidationMessageFor(model => model.Height)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ContentType, "ContentType", htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.ContentType, htmlAttributes: new { @class = "form-control", placeholder = "ContentType" })
                                @Html.ValidationMessageFor(model => model.ContentType)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Caption, "Caption", htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.TextAreaFor(model => model.Caption, htmlAttributes: new { @class = "form-control", placeholder = "Caption" })
                                @Html.ValidationMessageFor(model => model.Caption)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AltTag, "AltTag", htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.AltTag, htmlAttributes: new { @class = "form-control", placeholder = "AltTag" })
                                @Html.ValidationMessageFor(model => model.AltTag)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.FileUrl, "FileUrl", htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.FileUrl, htmlAttributes: new { @class = "form-control", placeholder = "FileUrl" })
                                @Html.ValidationMessageFor(model => model.FileUrl)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.MD5Hash, "MD5Hash", htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.MD5Hash, htmlAttributes: new { @class = "form-control", placeholder = "MD5Hash" })
                                @Html.ValidationMessageFor(model => model.MD5Hash)
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.IsPublished, "IsPublished", htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.CheckBoxFor(model => model.IsPublished)
                                @Html.ValidationMessageFor(model => model.IsPublished)
                            </div>
                        </div>
                    </div>
                </div>

            </div>

        </div>
        <div class="form-actions">
            <button type="submit" class="btn btn-sm btn-primary"><i class="fa fa-save"></i> Lưu lại</button>
            &nbsp; &nbsp;
            <a href="@Url.Action("Index")" class="btn btn-sm" rel="tooltip" title="Quay lại">
                <i class="fa fa-undo"></i>
                Hủy
            </a>
        </div>

    </div>
</div>

